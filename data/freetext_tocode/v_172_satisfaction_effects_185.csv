lfdn;v_172
30;Good requirements elicitation leads to next order.
35;haveing excited customers that love to use the product
41;Satisfying requirements engineering help to build a better, more robust piece of software that is easier to maintain and will meet customer needs as adequately as possible. This may extend the project in the short term, but will enhance its maintainability in the long term.
75;sustainability
79;Better productivity, happier teams and customers.
84;Quality of the SW product. 
120;Good common understanding
129;Product development meets business needs.  Most adjustments are minor.
144;Delivering increments of value to our customers in a timely, transparent fashion, based on their requirements.
160;a pretty good technical spec, needful tests and a better estimate for implementation    less missunterstanding between customer, project leader, developers, QA
167;+ Happy engineers  + Happy customer
182;Goal being met!!
183;Its a bit heavy on meeting the project timelines. But we are coping up.   
203;Basically the project engineers could follow the requirements structure stated in the requirements management plan to link in DOORS and ComplyPro.
205;Clearer stakeholder understandings of what they want, expect, need and may receive
215;acceptance and good understanding by business stakeholders
278;In the design phase, we can refer the business process model and guess the implicit requirements.
291;That when the team finaly works, management will destroy that by shuffling with resources and priorities. 
304;Clear communication, quality discussions regarding test specifications, faster and more transparent progress
310;Clear understanding of what will be done by the development team, as the requirements were part of the contract that the customer accepted in the beginning of the project.
313;Confidence in the quality of the product.
317;Suppliers can write excellent proposals with a modest effort (20-30 hours).  Easy to select the winner because we can se what each proposal supports well or poorly.  A good basis for resolving conflicts about who pays when issues came up during Development  A good basis for writing test cases and user manual.  We met the business goals
330;Fulfilling customer expectations, he has what he wants and has asked
332;Smoother handovers, less defects and issues
364;Fast and good development of new products
365;We can work faster.   Sometimes it is hard to remember or find out how something should really work.
370;stress during development phase, last minute modification to deal with, solution delivered not complete in the first release
372;A set of well-documented requirements which are actually well-understood by the requirements owner.
387;More efficient tests  Better product Quality.
412;Better precission in our delivery, smarter architecture due to a broader understanding of the requirements. Easier and quicker to test. Clear acceptance criterias from customer. A comprehensive and detailed way of d3escribing the system comes from the requirement specification.
416;Satisfied Product owner
429;With a well written specification there are less questions or at least east to ask the questions. As a developer we can start working on the requirement without having to think about what questions to ask before taking on a task. 
437;Project on time, profits for the company
482;Better quality software   Faster time to market   Happy customer 
502;Mainly, better communication and less errors.
506;can release product successfully 
511;We are not spending too much time in RE phase and we elicit the details required in direct contact with users.
512;happy customer and happy team AND business value added
539;A customer satisfaction that facilitates relations in a future purchase
541;Development in time and budget
548;Did not understand the question.
549;Ultimately a satisfactory requirements engineering phase should lead to a smoother development phase.
569;The documents help to consolidate the picture of what the software is doing. It is very important, that all stakeholders understand these documents (so clear and easy to read documents are the key). The consequences are that we get good feedback early on. This saves a lot of time and budget. It also helps to create good test cases. And most of the developers hate to read long or abstract analysis documents. 
573;Ensuring requirements meet the needs of the organisation are paramount to project success. All to often, IT projects are measured by the 'on time, on budget, on spec' criteria. As to whether projects meet organisational necessities is often overlooked, turning to the original specs to defend any inadequacies. Billions of dollars are spent each year on IT investment. The return on this investment is hazy at best and clearly missing at worst. this is one of the most overlooked and misunderstood areas of IT.
586;It makes it easier to work together with customer and achieve results
626;Better outcome and value added to the product.
676;the objectives are met
683;Diminishing resources such as time. Get quality products that meet customer needs
684;A better and easier work for us
694;The result I aim to get from structuring how we collect and document requirements is to  - reduce spending time on building the wrong thing  - be able to quickly change requirements   - get a clear communication among all stakeholders
723;User's　acceptance
729;Rework low in advanced stages, thus low cost of rework.
742;Business goal realization.
753;I consider it is essential to know the user experience for satisfactory requirements elicitation
754;better productivity in the sprints  better acceptance of user stories  better time to market
758;We are more focused as a team on the tasks at hand.
774;Happy customer and less work 
786;The performance of the product is improved.
825;Requirements correctly state what the end user/customer wants and needs. Requirements are technically accurate and easy to understand due to review process.
830;Pride in the BA deliverables and confidence that as the solution is enhanced in the future, future teams have a good basis for understanding the current state of the solution.
839;We deliver relevant tools that aid customers in their practice, supporting their more efficient operations.
849;Public more adherent to public yearning
851;Higher satisfaction of end users, lower post implementation corrections.
865;Delivers more suited to client needs
868;As for the question of meeting the needs, mainly of the quality of requirements, the current agile development is satisfactory. However, in this model it is difficult to estimate time and total cost of the project.
870;Reliable, secure and robust product
879;Clients satisfaction.
896;We deliver products with the quality defined by the Institute, on time and with a satisfied client
918;Team and clients aligned with the expectations of the project.
926;the product can be validated in compliance between what is expected of it
929;It brings greater satisfaction to clients, since the service is more aligned with the real business needs.
931;Satisfied clients
937;Better products
945;Project well developed, the development stages after the requirements are performed more efficiently, increased likelihood of delivery of the software that was actually requested / required.
948;cf. answer to question 27
952;Software requirements are descriptions of a software system’s functionalities. but when we describing these functionalities, a lot of product owners mix up solutions and  ideas with requirements. so we require a engineering .
956;NP
960;.
962;Achieving client satisfaction 
968;Organization. Adequacy. Consistency
984;Transparency, documentation, clear communication processes
985;Better stability when carrying out the project, eliminating many uncertainties.
987;Good final results
1006;A poorly finished product with inoperative features
1008;Smooth project, which less bugs and a stable output  Easy cooperation with external persons or companies  Easy cooperation with the customer
1021;Delivery of a stable product, with quality and according to what the client wants.
1039;Be aware that changing requirements is normal generates less stress on the team. Obviously, if the new requirements are far outside the defined scope, then we will have to revise the established contract.
1051;Satisfied stakeholders and product quality
1055;we have a very good relation with customers and users. Users feel free to request changes
1062;achieve user needs 
1091;Assertiveness and client satisfaction due to the achieved result.
1100;Mostly delivering what the clietn needs and having little rework.
1118;Mainly, we reach the customer expectations in the first try.
1126;Products delivered with quality and satisfied clients.
1139;Better quality, satisfied customers.
1140;a more or less formal basis for acceptance testing
1161;PROJECTS FINISHED ACCORDING TO SCHEDULE, GREAT COMMITMENT of CUSTOMER areas while developing REQUIREMENTS.
1163;That we never finish sprints on time or with all the requirements finished.
1164;SUITABLE SYSTEMS FOR CUSTOMERS
1171;DELIVERING without news the software product
1172;efficiency and effectiveness
1188;Alignment of expectations with those involved in the project and clear and objective definition of the scope, facilitating the achievement of project objectives.
1189;Increased customer satisfaction, clarity of specifications for developers
1194;The gap between the deployed product and the requirements is less, the customer gets changes quickly and there is no tension between the teams due to changes in scope or specification.
1200;A completed product accepted on time
1220;Largest market and implementing short-term projects
1222;because we cover most of the functional requirements of the system
1227;it is considered different lines of work, but one of the most important is the management of requirements, which is responsible for providing the direction and scope of the project.
1228;meets the company definition
1229;The customer has what he wants in the time he needs it, that is to say, if there is a change in his business he knows that a solution can be implemented in the system in a short time.
1255;Increase the team's performance, fluidity in communication.
1266;And when the safety and operating standards are not initially accepted by the client, opening a strong negotiation for its implementation.
1283;Shorter sprints, reduced time-to-market
1289;Claim Management, Clear language with the customer, Talking on facts rather the visions ...
1296;The product works as expected 
1316;Good testautomation coverage.
1327;Better results, reduced cost for unpaid changes, satisfied customers etc. 
1331;Compliance with deliveries, client satisfaction, manageable problems.
1339;THE MODEL DEVELOPED MEETS CUSTOMER NEEDS
1343;SATISFIED CUSTOMER  FUCNTIONAL PRODUCT according to the customer
1344;PRODUCT MEETS CUSTOMER EXPECTATIONS
1350;SOFTWARE SATISAFACE CUSTOMER NEEDS.  DEVELOPMENT IN plnned time. SOFTWARE functionality is adequate
1351;CLEAR BUSINESS RULES. QUALITY PRODUCT. QUALITY SOFTWARE. 
1353;SUCCESSFULLY COMPLETED PROJECTS
1354;TEAM MOTIVATION. bringing out the best of TEAM MEMBERS. ENJOY programming INCREASE CREATIVITY
1356;Clear BUSINESS RULES Quality PRODUCT
1357;- satisfied user - the developer company gets good PRESTIGE
1358;A SOFTWARE that the user likes
1384;development agility, time gainance
1398;Satisfied Customer.
1402;I don't understand the question
1406;Project on track, but more complexity could lead to off track
1411;Stakeholders know what they get in advance and have an understanding why priorities were set as they are.
1413;A good FINAL product AND CUSTOMER SATISFACTION
1416;80% satisfaction
1426;Requirements engineering is done early in the project, and almost every project member is involved. Therefore the project gathers speed fast and everyone is informed concerning the goals. 
1433;A SOFTWARE THAT MEETS THE CUSTOMER WISHES.
1435;REQUIREMENTS FULFILLED. HIGHLY FUNCTIONAL product
1458;POSITIVE CONSEQUENCES ARE DUE TO JOINTLY initial requirements analisys between the Board 'final authority' and technicians (developers) to assess weight of the PROJECT
1459;because IS SATISFIED CUSTOMER
1462;GOOD ACCEPTANCE BY CUSTOMER   GOOD AGREEMENTS REACHED 
1467;The tools/process we have is sufficient for our business/development needs.
1474;Correct implementation
1484;no sudden changes
1485;no sudden changes
1526;Happy customers
1618;Allows us to build products that address customer needs. 
1620;It is important when customers request changes. However we do not get too many change requests due to the nature of our platform and what we do as a company. 
1624;On time, on budget and on quality deliveries
1645;not sure I understand ( satisfaction of us = satisfaction of client => client stays long term)
1650;This question doesnt make sense.
1651;These help the team build the software in a more consistent way. Everyone is on the same page and understands the domain. In enables the engineers to focus on the  how  and not the what.
1663;more confident in getting the work done, as required.
1667;Understanding of the outlined tasks and what is intended for the project.
1668;Allows TO VERIFY if objectives set out in the project are reached, since they are a reflection of the needs of customers.
1669;DEVELOP HIGH QUALITY SOFTWARE IN SHORTS AND EFFICIENT TIME.
1670;Allow to asses were the GOALS OF THE PROJECT are met or not
1675;Team productivity and a heigher standard of work.
1676;I  find the main consequence or better documenting and estimating stories and requests is more process. One has to be very careful not to add too much of it, to not demotivate the technical people. In my group we added a bit of process and the technical people generally seem happy with it.
1695;Centralized management, high reuse and process integration.
1697;Software quality is higher, the behaviour of the system is predictive and all the stakeholders have the same expectations.
1700; PROVIDE us the FACILITY to find REQUIREMENTS
1703;LITTLE CHANGEs AND An unpatched ROBUST PRODUCT, FEW bugs
1705;Allow to serve customers and enterprises of all sizes ALWAYS WITH QUALITY MANAGEMENT SYSTEM AT HAND
1715;a product that satisfies the customer needs.
1717;SATISFIED User. SERVICES that THE COMPANY provides ARE RECOGNIZED.
1727;CUSTOMER SATISFACTION
1741;Trust in us
1742;all aspects of the project is running smoothly without disputes
1753;A more effective scrum team - knowing what to do and the priority of each task  A satisfied customer - that understand and continousle participate in our requirement process, thus are more understanding as to what we devlier (and what we dont deliver!)  A smooth cooperation between the team members, the team and other teams, our delivery and the many recipients (users, other tool vendors integration), of our product  Better economics for us and our customer - no misses of delivery content or discussions about what we  said  we would deliver
1756;Not sure I follow.
1759;Easy to know what to implement
1761;Controll
1812;Good customer relations
1820;Easy analysis, rapid implementation and retrieval of information
1842;The fact that we do not invest a lot of time with the requirements makes it easier and there is not a great resistance to changing requirements. Note that, in my case, the client is internal, so a formal acceptance and definition of requirements was not necessary. Being the project implemented by a R&D team, the development team itself was responsible for creating many of the requirements. The client in many cases did not know what he wanted nor what it was possible to implement. (But this is not unique to R&D projects.)
1844;A good analysis of requirements is important to prevent future problems.
1849;We're sure we're delivering the correct value.
1894;A good focus on the end client, the actual users of the software and the needs of those for whom these users work.
1917;efficiency, above all.
1918;It allows you to define implementation plans and alternatives.
1941;Proper functioning of the team and the project
1957;** I don not understand this question **
1963;x
1969;I find the wording of this question a bit confusing.  If my customer is not living up to my expectations, then the consequences are that a I don't work on the project.  If the customer heeds my advice and works to improve their requirements elicitation processes this usually results in a cultural change within the company.  I.e. after the project is completed and I leave to work on another, the people involved that remain in the company usually have a better understanding of why requirements elicitation is important and methods to do it well.
