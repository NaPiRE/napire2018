lfdn;v_344;tag
1290; Specifications;
150; using non-quantified textual requirements;
291; using quantified textual requirements;
144; using quantified textual requirements;
317;(The same);
1355;ABLE TO MAKE CHANGES;
1350;ALLOWING FOR CHANGES AND UPDATES;
126;Analysis;
1667;Analysis and ease of reuse;
1695;Analytical skills, reusability;
545;answered in question above;
929;any documentation with textual description of the requirement vision document.;
1327;Architdecture document, system specification ;
851;Architectural documents;
213;As a textual requirements in document or a system Jira.;
952;before transformation;
84;by decomposing of functionalities of the new system onto modules with appropriate scope and features;
1406;By modularization;
754;Checklists;
758;Code analysis reports for cohesion and coupling;
1462;CONTRACT;
1165;DEVELOPMENT POLICIES AGREED WITH THE team;
1859;diagrams;
162;diagrams;
334;Diagrams and quantified textual requirements;
1091;Diagrams and texts;
570;Diagrams, quantified and non-quantified textual requirements;
170;document;
393;documentation in future components as early as possible;
1454;Due to the constant growth, one of our principles is tha maintainability of the software;
1161;Each development must be sufficiently independent, so it can be installed in any country of the subsidiaries.;
1349;Established in the contract;
1321;Explicit;
785;following some guideline;
586;Guideline, policy and practise;
1804;Guidelines;
420;having maps of how systems and part of systems interact;
1344;it allows for a quick maintenance;
1624;maintainability is not something that needs documentation it should be in the code we write;
199;Mil style Maintainalility Guidelines.;
1140;modifiability, analysability;
1690;Modifiability, reusability;
203;modifiability, reusability, testability;
1424;modularity;
1159;MODULARITY;
1122;Modularity and standardization;
1353;MODULES SUGGESTED FOR THE SOLUTION - COMPONENT DIAGRAM;
839;Must be able to be maintained by BAU team post hand-over;
987;Natural Language;
1100;natural language;
1413;NATURAL LANGUAGE;
479;natural language (sentence patterns);
663;Natural Language / Informal Text;
79;Non functional requirements chapter at the end of each concerned story;
208;non-quantified textual;
106;non-quantified textual requirement;
637;non-quantified textual requirements;
1759;non-quantified textual requirements;
1840;non-quantified textual requirements;
1718;non-quantified textual requirements;
1441;non-quantified textual requirements;
446;non-quantified textual requirements;
524;non-quantified textual requirements and diagrams;
1283;Non-quantified textual requirements, guidelines and standards;
916;not measurable;
1340;PERFORMING quick maintenance;
197;Plain text;
41;Proper documentation and software techniques;
1164;PROTOTYPING;
76;Qualified textual requirements tagged as non functional in solution;
1055;quality attribute scenario;
626;Quality scenarios;
1066;quantified text requirements as much as possible;
384;quantified textual requirements;
310;quantified textual requirements;
985;quantified textual requirements;
1742;quantified textual requirements;
427;Quantified textual requirements;
502;Quantified textual requirements;
205;Review state of the art and best practices;
182;Specific guidelines standard or practice;
1426;specific guidelines, quantified requirements (e.g. comments, max. lines per module);
1844;Support Facility;
1266;System Block, subdivided by section;
1402;Team reviews;
292;Test coverage and Service guides, xFMEA to a certian extent;
1831;tests and measurable textual requirements;
1008;Text;
1621;Text;
569;Text;
1329;text;
1820;Text;
1467;Textual;
183;Textual;
332;textual;
147;textual;
560;Textual & diagrams ;
1331;textual descriptions;
728;textual requirements;
349;textual requirements;
1279;Textual requirements;
719;textual requirements;
750;Textual requirements and diagrams;
377;Textual requirements with supporting tables of numeric standards.;
786;The new diagrams are added to the old architecture and dated before implementation.;
1021;the system should be open, possibility of system extension;
876;through the functional requirements and models of the system architecture;
909;unmeasurable textual requirements;
1717;USER MANUAL;
1357;USER MANUALS;
1466;User story/incident/backlog tracking tool;
48;Using a tool (PTC Integrity);
525;using internal guide lines;
928;Using measurable textual requirements, test cases and prototyping of interfaces.;
278;using non-quantified textual requirements;
416;using non-quantified textual requirements;
120;using non-quantified textual requirements;
511;using non-quantified textual requirements;
1291;using non-quantified textual requirements;
1697;Using quantified textual requirements;
1141;using quantified textual requirements;
506;using quantified textual requirements, diagrams, following any specific guideline, standard or practice.;
165;using semi-quantified textual requirements ( shall-statements );
912;Usually a questionnaire for the developers and tends to be subjective;
1423;VALIDATION CAPACITY;
1676;we document all these requirements on Confluence, on a page or space specific to what we're building.;
