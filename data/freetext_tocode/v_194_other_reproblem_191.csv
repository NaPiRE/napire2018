lfdn;v_194;tag
35; ;
330; high-level Monitoring meetings of steering commitee where attending directors / managers who do not have daily visibility of the project and compromise dates and scope without the opinion of the rest of the team;
545;A lot of, but today no time to explain;
199;A personal axiom:  A shortcut in a decent process will result in twice (or more) additional costs to the project and associated schedule delays. ;
364;administration effort  approval and authorisation procedure  (internal and external) coordination and alignment;
268;Bad stakeholder analyze ;
479;Be conform to Regulations and Standards and satisfy the customer.   Exchange of requirements in tool chains (e.g. Medini - Polarion - Rhapsody);
879;Better analysis by the Business Analyst in the client documentation.;
512;by the way., I did not experience any of these, but in my eyes they are the top 5 worst ones that could happen...;
208;"changing resources (they cannot focus in our project, due they have to do other line management tasks); poor availability of stakeholders;";
640;Client requests a considerable amount of analysis which is seemingly wasted effort;
1349;CONTRACTS NOT ALLOW if required CHANGES SHOULD BE PREPARED WHICH IS COMPLEX and takes time;
1289;Customer claim managers;
523;Delayed responses from the client to doubts of the teams;
830;Developers not using the documentation when coding the solution - making assumptions and getting it wrong. Our issue was communication within the project team - specifically developers and the BAs and Solution Architects who provided design documents that the developers didn't follow either.;
393;Different levels of documentation would be required. In this project, requirements are only documented in rather low level system design descriptions. No higher level business requirement documentation is available for analysts, developers and new users.;
1111;Discontinuity of the project by the company board after the project ends;
359;Disturbance by customer side development department.  They are due to the presence significance of their own,  interfere with us.;
179;Do not;
444;Do not;
676;Do not.;
1761;Finance and cost ;
93;General dissatisfaction in customers because the system is not the same as the old one.;
213;I fixed that we do use to much different tools for RE and it can take to much resources for RE activities. In many cases we have specific big tools for specific RE activities and goals, but how much time we spent on use of those tools. Does those tools support possibility to access to requirements to all involved persons, how easy those requirements we can export and import in situation when we change tools. Does the cost of tool, spent time on them and the result is in balance?   And during the project we do forget about the future - do we will have complete requirements and related information?  After the 6 month or more we do not remember what was in the solutions and how looks the last version of those requirements. We usually forgot to update requirements and do only partial documentation of requirements and changes. And in the result we have problems to find out what is the actual version and if we want to make changes in solutions we need to spent lot of time of existing solutions investigation. Of course we do not need to create big heavy documentation. We can use tool for requirements documentation and more, for example, for documented communication, requirements distribution etc.;
1928;I was not able to answer question 29 and 30, no checkbox appeared.    But in my team we don't really deal with requirements due to the nature of the team (fix bugs affect other projects in a timely manner and small improvements). What I do notice in other teams is the time provided to implement the requirements they have. There is a very delicate balance between what the client finds acceptable to deliver something which usual does not correspond to what the time that is needed to do the whole process (from design to delivery) properly.;
880;Implementation of agile methods. Inaccurate estimates.;
1239;impossible to fulfil (resource) constraints;
150;Incompetent vendor project team;
310;internal conflicts at the customer because of different priorities;
1419;Is necessary to CONSTANTLY communicate REQUIREMENTS to the customer.;
355;it is always the magical three points: Time - Cost - Requirements    All Projects must be cheap as possible in the shortest time with millions of requirements and use cases!;
758;It is important to figure out which requirements have the highest priority and business value for the company and get the team to understand;
1810;Junior developers misunderstanding requirements, and therefore building the wrong thing.;
1051;Key customer stakeholders aren't sufficiently involved many times;
1124;Lack of a change management plan.;
1161;Lack of commitment from management.;
1804;Lack of experience and not enough funding to bring in experienced staff.;
1466;Lack of initiative shown by people bogged down by parts of the process.;
1065;Lack of interest in the project from stakeholders and prospective end users;
1742;Lack of knowledge in way of working agile;
263;Lack of resources with given time frame;
1331;Lack of separate environments for development, testing and approval, strong dependence on the client's team for solving some problems, unavailability of the client;
1663;lack of sufficiently knowledgable resource in the team ie. team member with skill not particularly required for the project.;
144;Lack of support from management to use agile processes. While management says that they understand it and are in agreement, in practice they still hold onto the traditional ways of thinking, and expect the outcomes of agile but with waterfall practices. Also, some regulated industries insert an extra layer of requirements that serve a purpose, but are also very constraining.;
1617;Lack of visibility of Business Analysts to the customer and how they influence the final result. Tought relationship as to the person  who writes meeting notes  ;
649;Large scale projects can go through several release phases and take several years to complete - during this time technology inevitably evolves and implemeting upgrades can be difficult;
249;Learning on the fly;
831;Mismatch between needs of management to report on a waterfall structure vs needs if team to design and build in an agile way;
160;missing willingness to understand the customers needs by project people. Sometimes they behave like a proxy between customer and developer.;
76;No;
170;no;
506;no;
534;No;
710;No;
723;no;
876;No;
894;No;
931;No;
1010;No;
1014;no;
1062;no;
1139;No;
1159;NO;
1164;NO;
1165;NO;
1166;NO;
1167;NO;
1168;NO;
1171;NO;
1172;NO;
1220;NO;
1221;NO;
1222;NO;
1223;NO;
1224;NO;
1225;NO;
1226;NO;
1227;NO;
1229;NO;
1339;NO;
1340;NO;
1343;NO;
1344;NO;
1348;NO;
1350;NO;
1351;NO;
1352;NO;
1353;NO;
1356;NO;
1357;NO;
1358;NO;
1359;NO;
1360;NO;
1413;NO;
1415;NO;
1417;NO;
1423;NO;
1424;NO;
1425;NO;
1433;NO;
1435;NO;
1455;NO;
1458;NO;
1459;NO;
1462;NO;
1482;NO;
1483;NO;
1484;NO;
1487;NO;
1668;NO;
1669;NO;
1670;NO;
1690;NO;
1695;NO;
1697;No;
1698;NO;
1699;NO;
1703;NO;
1705;NO;
1715;NO;
1717;NO;
1723;NO;
1727;NO;
1753;No;
1805;No;
1831;No;
1844;No;
467;no one comes to mind;
1070;No slack time to improve. The invest into education and learning is far too low;
1620;No the above are the most prominent problems we face. ;
259;No.;
933;No.;
959;No.;
1031;no.;
1118;No.;
1194;No.;
1896;No.;
129;None;
768;none;
1327;none;
1917;none relevant;
1383;None relevant.;
1933;nope;
1941;Not applicable.;
1744;Not enough support from HQ, not allowed to make decisions;
549;Not really;
694;not that I can recall at this time;
30;Nothing;
956;NP;
205;Organization does not respect role of PM or BA as leaders;
147;Ownership of project and project goal on business side is missing.;
1969;People generally don't understand that before you can solve a problem you have to know what it is first.  They generally do not see the value in requirements elicitation because they do not understand the consequences of doing it poorly.  They generally lack the experience to know what doing it well looks like.;
119;politics getting in the way of engineering;
1542;Poor collaboration culture, when an error or failure occurs, the team spririt and collaboration are not much present, as long as it does not concern the team;
1812;problems with agreeing scope;
573;Project methodologies are required to ensure good governance and control. IT have a habit of managing the project plan rather than the project. The Agile Manifesto is largely misunderstood.;
165;RE approaches/methodologies are too often focussed/designed for software engineering practices and not sufficiently suited for systems engineering (or plant engineering). SW engineers insist in promoting a methodology that is not well necessarily well suited for complex systems and subject matter experts are often annoyed by implementing a methodology they don't understand.;
332;Replacement of some of the stakeholders during the project, resulting in loss of knowledge, affecting the scope of the project because of new insights. We fixed that by working closely with product management and the application engineers to reduce the level of impact on the project.;
1526;Requirements changing during an iteration;
146;Requriments engineering have a bad rep in agile development. It is seen as constricting.  lets just start and see how we do  seems to be the best practice in scrum.;
952;Scope of work not define and requirements are not clear.;
178;Scrum master not really enforcing Scrum process and not living agile principles  software architect not being team ready;
1791;sdf;
1454;"SI; LACK OF CONFIDENCE AND TRUST Being a relatively new company";
722;System capabilities mentioned in the contract don't match with the customer's real needs.;
182;Team capacity to complete the work ;
1006;The biggest problem occurs in the changes of requirements already implemented that will have changes due to bad requirements gathering;
442;the budget for technology upgrades is viewed as a cost;
1932;The lack of an agile way of tracking the status of each requirement throughout the development process until delivery to the client. Different tools for the various stages of the process without direct integration.;
416;the lack of develop and proper test environments;
1064;The project runs a mix of IT- and Building/Installation types of domains, which leads to unnecessary misunderstandings from time to time.;
729;The project was for an industry in another country, so we optimized instances survey / validation / classroom training (which were not many), and to work well with teleconferences throughout the project, leading to sometimes all the customer partners are not available that would have been necessary, which led to having to plan and manage time well, because sometimes a demonstration, validation, etc. lingered. Either way, it is understood that while it was different from a project that could have had more face communication, it not qualifies as a problem in itself, as it did not stop carrying out the project and its implementation according to the project plan.;
1033;There is always a big challenge in the balance between technology and the client's perceived value for each delivery, between technical excellence and perception of value, quality and value, it is a constant challenge in relation to layers, frameworks, automation, etc.;
163;There is no common vision on the project, no concern about delivering a product that actually meets the customer needs and is maintainable.;
1718;There is no mechanism to balance out various stakeholders.  One individual requires discussion on a large share of low value requirements.;
1402;This is an SAAS project. Marketing and Sales often fail to remember that more features, that no one uses, are not  a good thing  to have. Basic usability principles are not considered when making feature suggestions or requests.;
167;This project runs exceptionally well. Therefore, we do not experience the problems cited. The survey forced me to pick some. So I picked those that pose the biggest risk to projects that are not as well run as this one.;
384;This project, while dealing with software development, was mainly a business change project where the customer was expected to standardize the business processes. The assumption of standardization by the customer was the basis for the development of the software. When the customer was unwilling to change, many developed features of the software became obsolete or needed to be re-designed to fit customized processes.;
317;This was a COTS-based acquisition. To deploy the most important parts on time, we accepted and paid an  almost  complete delivery, assuming the rest was just maintenance. However, the Financial incentive disappeared and the rest went very slowly.;
387;To define and use other complexity metrics than McCabe in projects.   Release-planning and quality could be improved.;
1266;Training needs, and technical enhancements for client / company, the need to comply with safety and operation standards for the project.;
1341;TURNOVER LACK OF BUDGET;
183;We are ongoing a transformation phase so difficult to cope with all mandates;
839;We don't have any of the problems listed in the previous question, we are fortunate in that we have a good relationship within the team and with our customers.  The only issue that sometimes occurs is that because we have a relatively high level of autonomy within our organisation, we sometimes hit up against rigid corporate IT policies, however, we are generally able to resolve these with approval and support from IT management.;
1676;we have lots of small stories and I think having to timebox all these stories bites us the most. Otherwise we wouldn't be able to meet all our deliverables.;
203;Without a replacement or a suitable replacement for an engineer who left the project.;
1963;x;
1457;YES, BUGS IN DEVELOPMENT TOOLS OR WHEN THEY ARE NOT FREE SOFTWARE. High staff turnover thet elicited requirements. LACK OF EXECUTION OF AGREEMENTS WITH CUSTOMERS OR END USERS. Unsigned meeting summaries.;
1416;YES, DISMISSAL OF STAFF;
1354;YES, lack of financial resources;
1355;YES, SOME OF THE AGREEMENT ON CONTRACT WHICH DO NOT ALLOW CHANGES;
